# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'screen.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from gui.widgets.Button100x100 import Button100x100
import os
import gui.screen
import random
from client.controller import execute_action

dirname = os.path.dirname(__file__)
image_folder = os.path.join(dirname, "../images")


class UI_InformationScreen(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        # MainWindow.resize(1280, 960)
        MainWindow.setFixedWidth(1280)
        MainWindow.setFixedHeight(960)
        MainWindow.setAutoFillBackground(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.centralwidget.setStyleSheet("background-color: #F0F0F0;")

        # title
        self.titleInformation = QtWidgets.QLabel(self.centralwidget)
        self.titleInformation.setGeometry(QtCore.QRect(0, 150, 1280, 100))
        self.titleInformation.setText("")
        self.titleInformation.setPixmap(QtGui.QPixmap(
            os.path.join(image_folder, "./match-information.png")))
        self.titleInformation.setAlignment(QtCore.Qt.AlignCenter)
        self.titleInformation.setObjectName("titleInformation")

        # label
        self.numOfQuestions = QtWidgets.QLabel(self.centralwidget)
        self.numOfQuestions.setGeometry(QtCore.QRect(300, 300, 396, 48))
        self.numOfQuestions.setText("")
        self.numOfQuestions.setPixmap(QtGui.QPixmap(
            os.path.join(image_folder, "./num-question.png")))
        self.numOfQuestions.setScaledContents(True)
        self.numOfQuestions.setObjectName("numOfQuestions")
        self.numOfPlayers = QtWidgets.QLabel(self.centralwidget)
        self.numOfPlayers.setGeometry(QtCore.QRect(300, 400, 352, 48))
        self.numOfPlayers.setText("")
        self.numOfPlayers.setPixmap(QtGui.QPixmap(
            os.path.join(image_folder, "./num-player.png")))
        self.numOfPlayers.setScaledContents(True)
        self.numOfPlayers.setObjectName("numOfPlayers")
        self.playerOrder = QtWidgets.QLabel(self.centralwidget)
        self.playerOrder.setGeometry(QtCore.QRect(300, 500, 204, 47))
        self.playerOrder.setText("")
        self.playerOrder.setPixmap(QtGui.QPixmap(
            os.path.join(image_folder, "./order.png")))
        self.playerOrder.setScaledContents(True)
        self.playerOrder.setObjectName("playerOrder")

        # input
        self.inputQuestion = QtWidgets.QLabel(self.centralwidget)
        self.inputQuestion.setGeometry(QtCore.QRect(900, 300, 80, 40))
        font = QtGui.QFont()
        font.setFamily("Cooper Black")
        font.setPointSize(25)
        font.setBold(False)
        font.setWeight(50)
        self.inputQuestion.setFont(font)
        self.inputQuestion.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.inputQuestion.setStyleSheet("color: #FBC02D; ")
        self.inputQuestion.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.inputQuestion.setObjectName("inputQuestion")

        self.inputPlayer = QtWidgets.QLabel(self.centralwidget)
        self.inputPlayer.setGeometry(QtCore.QRect(900, 400, 80, 40))
        font = QtGui.QFont()
        font.setFamily("Cooper Black")
        font.setPointSize(25)
        font.setBold(False)
        font.setWeight(50)
        self.inputPlayer.setFont(font)
        self.inputPlayer.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.inputPlayer.setStyleSheet("color: #FBC02D; ")
        self.inputPlayer.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.inputPlayer.setObjectName("inputPlayer")

        self.inputOrder = QtWidgets.QLabel(self.centralwidget)
        self.inputOrder.setGeometry(QtCore.QRect(900, 500, 80, 40))
        font = QtGui.QFont()
        font.setFamily("Cooper Black")
        font.setPointSize(25)
        font.setBold(False)
        font.setWeight(50)
        self.inputOrder.setFont(font)
        self.inputOrder.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.inputOrder.setStyleSheet("color: #FBC02D; ")
        self.inputOrder.setAlignment(
            QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.inputOrder.setObjectName("inputOrder")

        # play button
        self.playBtn = Button100x100(self.centralwidget)
        self.playBtn.setImage(os.path.join(image_folder, "./play-btn.png"))
        self.playBtn.move(590, 600)
        self.playBtn.setName("playBtn")
        self.playBtn.clicked.connect(lambda: self.handleClickPlayButton(MainWindow))
        self.playBtn.hide()

        #Timer
        self.timer = QtCore.QTimer()
        self.timer.timeout.connect(self.get_status)
        self.timer.start(1000)

        # setup
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        response = execute_action("get_status", None)
        result = eval(response)
        order = result.get("order")
        player = result.get("total_player")
        self.inputQuestion.setText(_translate("MainWindow", str(player*5)))
        self.inputPlayer.setText(_translate("MainWindow", str(player)))
        self.inputOrder.setText(_translate("MainWindow", str(order)))

    def inputNumber(self, question, player, order):
        self.inputQuestion.setText(str(question))
        self.inputPlayer.setText(str(player))
        self.inputOrder.setText(str(order))

    def get_status(self):
        response = execute_action(action="get_status", value=None)
        result = eval(response)
        total_player = result.get("total_player")
        order = result.get("order")
        turn = result.get("turn")
        if (turn):
            self.playBtn.show()
        self.inputNumber(str(total_player*5),str(total_player),str(order))

    def handleClickPlayButton(self, MainWindow):
        print("Clicked!")
        self.timer.stop()
        response = execute_action(action="get_status", value=None)
        result = eval(response)
        isPass = result.get("ispass")
        response = execute_action(action="get_question", value=None)
        result = eval(response)
        ques = result.get("question")
        ans = result.get("answers")
        random_ques = []
        while len(random_ques)<4:
            rand = random.randint(0,3)
            if rand not in random_ques:
                random_ques.append(rand)
        ui = gui.screen.UI_QuestionScreen(
            ques=ques, a=ans[random_ques[0]], b=ans[random_ques[1]], c=ans[random_ques[2]], d=ans[random_ques[3]], isPass=isPass)
        ui.setupUi(MainWindow)
        MainWindow.show()
    
        
